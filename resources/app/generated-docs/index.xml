<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>index on pico-go documentation</title>
    <link>/</link>
    <description>Recent content in index on pico-go documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 06 Oct 2018 16:26:07 +0100</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>demo-01</title>
      <link>/example/demo-01/demo-01.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/example/demo-01/demo-01.html</guid>
      <description>demo-01 This is a simple project to demonstrate how to develop using pico-go.
example output sourcecode package main /* This is a simple demo project to show you how to use pico-go Copyright 2018 @telecoda */ import ( &amp;#34;fmt&amp;#34; &amp;#34;log&amp;#34; &amp;#34;image/color&amp;#34; &amp;#34;github.com/hajimehoshi/ebiten&amp;#34; &amp;#34;github.com/hajimehoshi/ebiten/ebitenutil&amp;#34; ) const ( // define these vars to be used in javascript canvas scaling code 	screenWidth = 320 screenHeight = 240 ) var blue = color.</description>
    </item>
    
    <item>
      <title>ebiten</title>
      <link>/example/ebiten.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/example/ebiten.html</guid>
      <description>You can use most of the ebiten examples too.
Here is an example of the flappy.go demo
Just trying opening a file from $GOPATH/src/github.com/hajimehoshi/ebiten/examples
The only code you may need to change is the scale factor when running ebiten. Set the value to 1 instead of 2 on some of the demos and we&amp;rsquo;ll handle the scaling for you.
func main() { if err := ebiten.Run(update, screenWidth, screenHeight, 2, &amp;#34;(Demo)&amp;#34;); err !</description>
    </item>
    
    <item>
      <title></title>
      <link>/_footer.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/_footer.html</guid>
      <description>pico-go docs</description>
    </item>
    
    <item>
      <title></title>
      <link>/about/history.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/about/history.html</guid>
      <description>pico-go Development history This is where you find out how pico-go (electron) came to be.
TODO: write this up properly&amp;hellip;.
go-game OpenGL
pico8!
pico-go
The idea originally started in my pico-go repo but I found the external dependencies too complex/limiting for getting developers quickly productive on multiple platforms.
OpenGL
-&amp;gt; ebiten
pico-go-electron
endless css/js wrangling
cross platform ballache
embedded resources in Windows vs filesystem on OSX still need to test on linux</description>
    </item>
    
  </channel>
</rss>